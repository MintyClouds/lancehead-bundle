version: "3.7"
services:
  # Homer
  homer:
    image: b4bz/homer:${HOMER_VERSION}
    hostname: ${HOSTNAME}
    container_name: homer
    restart: unless-stopped
    volumes:
      - ./homer-config.yml:/www/assets/config.yml
      - ./dashboard-icons:/www/assets-ext/
      - ./mintyclouds-logo.png:/www/assets/mintyclouds-logo.png
    environment:
      - UID=1000
      - GID=1000
      - TZ=Europe/Moscow
    ports:
      - ${HOMER_WEB_PORT}:8080


  # Wiki.js
  wikijs-postgresql:
    image: postgres:${WIKIJS_POSTGRES_VERSION}
    container_name: wikijs-postgresql
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "${WIKIJS_POSTGRES_PASSWORD}"
      POSTGRES_USER: "${WIKIJS_POSTGRES_USER}"
      POSTGRES_DB: "${WIKIJS_POSTGRES_DB}"
    # ports:
    #   - "${WIKIJS_POSTGRES_PORT}:5432"
    volumes:
      - ${WIKIJS_POSTGRES_DATA_PATH}:/var/lib/postgresql/data

  wikijs:
    image: requarks/wiki:${WIKIJS_VERSION}
    hostname: ${HOSTNAME}
    container_name: wikijs
    restart: unless-stopped
    environment:
      DB_TYPE: postgres
      DB_HOST: wikijs-postgresql
      DB_PORT: 5432
      DB_USER: ${WIKIJS_POSTGRES_USER}
      DB_PASS: ${WIKIJS_POSTGRES_PASSWORD}
      DB_NAME: ${WIKIJS_POSTGRES_DB}
    ports:
      - ${WIKIJS_WEB_PORT}:3000
    depends_on:
      - wikijs-postgresql

  photoview-postgresql:
    image: postgres:${PHOTOVIEW_POSTGRES_VERSION}
    restart: unless-stopped
    container_name: photoview-postgresql
    environment:
      POSTGRES_USER: "${PHOTOVIEW_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${PHOTOVIEW_POSTGRES_PASSWORD}"
      POSTGRES_DB: "${PHOTOVIEW_POSTGRES_DB}"
    volumes:
      - ${PHOTOVIEW_POSTGRES_DATA_PATH}:/var/lib/postgresql/data

  photoview:
    image: viktorstrate/photoview:${PHOTOVIEW_VERSION}
    restart: unless-stopped
    container_name: photoview
    ports:
      - "${PHOTOVIEW_WEB_PORT}:80"

    environment:
      - PHOTOVIEW_DATABASE_DRIVER=postgres
      - PHOTOVIEW_POSTGRES_URL=postgres://${PHOTOVIEW_POSTGRES_USER}:${PHOTOVIEW_POSTGRES_PASSWORD}@photoview-postgresql/${PHOTOVIEW_POSTGRES_DB}
      - PHOTOVIEW_LISTEN_IP=photoview
      - PHOTOVIEW_LISTEN_PORT=80
      - PHOTOVIEW_MEDIA_CACHE=/app/cache
      
      # Optional: If you are using Samba/CIFS-Share and experience problems with "directory not found"
      # Enable the following Godebug
      # - GODEBUG=asyncpreemptoff=1
      
      
      # Optional: To enable map related features, you need to create a mapbox token.
      # A token can be generated for free here https://account.mapbox.com/access-tokens/
      # It's a good idea to limit the scope of the token to your own domain, to prevent others from using it.
      # - MAPBOX_TOKEN=<YOUR TOKEN HERE>

    volumes:
      # Change This: to the directory where your photos are located on your server.
      # If the photos are located at `/home/user/photos`, then change this value
      # to the following: `/home/user/photos:/photos:ro`.
      # You can mount multiple paths, if your photos are spread across multiple directories.
      - ${PHOTOVIEW_DATA_PATH}:/app/cache
      - ${PHOTOVIEW_GALLERY_PATH}:/gallery:ro
      - ${PHOTOVIEW_MEDIA_PATH}/images:/media/images:ro
      - ${PHOTOVIEW_MEDIA_PATH}/nsfw:/media/nsfw:ro
    depends_on:
      - photoview-postgresql

    
